apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.amindset.ve.amindset"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        buildConfigField("String",
                "TWILIO_ACCESS_TOKEN",
                "\"${getSecretProperty("TWILIO_ACCESS_TOKEN", "TWILIO_ACCESS_TOKEN")}\"")
        buildConfigField("String",
                "TWILIO_ACCESS_TOKEN_SERVER",
                "\"${getSecretProperty("TWILIO_ACCESS_TOKEN_SERVER", "TWILIO_ACCESS_TOKEN_SERVER")}\"")
        buildConfigField("boolean",
                "USE_TOKEN_SERVER",
                "${getSecretProperty("USE_TOKEN_SERVER", false)}")
    }
    androidExtensions {
        experimental = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    android {
        applicationVariants.all { variant ->
            // Return compile configuration objects of a variant.
            variant.getCompileConfiguration().resolutionStrategy {
                // Use Gradle's ResolutionStrategy API
                // to customize how this variant resolves dependencies.
            }
            // Return runtime configuration objects of a variant.
            variant.getRuntimeConfiguration().resolutionStrategy {
            }
            // Return annotation processor configuration of a variant.
            variant.getAnnotationProcessorConfiguration().resolutionStrategy {
            }
        }
    }
    dexOptions {
        javaMaxHeapSize "2048M"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }




}

dependencies {
    //    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.twilio:video-android:4.0.0'
    //    implementation 'com.twilio:voice-android:3.1.0'
    implementation 'com.google.firebase:firebase-messaging:17.6.0'
    implementation 'com.stripe:stripe-android:8.1.0'

    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    //    implementation 'com.facebook.fresco:fresco:1.13.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'gun0912.ted:tedpermission:2.2.2'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'gun0912.ted:tedpermission:2.2.2'
    implementation 'javax.inject:javax.inject:1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0-alpha1'
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    //Dagger
    implementation 'com.google.dagger:dagger:2.13'
    kapt "com.google.dagger:dagger-compiler:2.13"
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"
    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.twilio:chat-android:3.1.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.android.support:preference-v14:28.0.0'
    implementation(name: 'sinch-android-rtc', version: '+', ext: 'aar')
}
apply plugin: 'com.google.gms.google-services'
